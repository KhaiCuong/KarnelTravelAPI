// <auto-generated />
using System;
using KarnelTravelAPI.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KarnelTravelAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230521131323_KANEL")]
    partial class KANEL
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KarnelTravelAPI.Model.AccommodationModel", b =>
                {
                    b.Property<string>("Accommodation_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Accommodation_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.HasKey("Accommodation_id");

                    b.HasIndex("Location_id");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.BookingModel", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_id"), 1L, 1);

                    b.Property<string>("Accommodation_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Restaurant_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Tour_id")
                        .HasColumnType("int");

                    b.Property<string>("TouristSpot_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Transport_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("booking_id");

                    b.HasIndex("Accommodation_id");

                    b.HasIndex("Restaurant_id");

                    b.HasIndex("Tour_id");

                    b.HasIndex("TouristSpot_id");

                    b.HasIndex("Transport_id");

                    b.HasIndex("User_id");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.FeedbackModel", b =>
                {
                    b.Property<int>("Feedback_id")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("booking_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Feedback_id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.AccommodationImageModel", b =>
                {
                    b.Property<int>("Accommodation_img_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Accommodation_img_id"), 1L, 1);

                    b.Property<string>("Accommodation_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("photo_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Accommodation_img_id");

                    b.HasIndex("Accommodation_id");

                    b.ToTable("AccommodationImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.LocationImageModel", b =>
                {
                    b.Property<int>("Location_img_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_img_id"), 1L, 1);

                    b.Property<string>("Location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("photo_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Location_img_id");

                    b.HasIndex("Location_id");

                    b.ToTable("LocationImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.RestaurantImageModel", b =>
                {
                    b.Property<int>("Restaurant_img_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Restaurant_img_id"), 1L, 1);

                    b.Property<string>("Restaurant_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("photo_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Restaurant_img_id");

                    b.HasIndex("Restaurant_id");

                    b.ToTable("RestaurantImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.TouristSpotImageModel", b =>
                {
                    b.Property<int>("TouristSpot_img_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TouristSpot_img_id"), 1L, 1);

                    b.Property<string>("TouristSpot_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("photo_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TouristSpot_img_id");

                    b.HasIndex("TouristSpot_id");

                    b.ToTable("TouristSpotImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.LocationModel", b =>
                {
                    b.Property<string>("Location_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Location_id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiAccommodationModel", b =>
                {
                    b.Property<string>("Accommodation_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tour_id")
                        .HasColumnType("int");

                    b.HasKey("Accommodation_id");

                    b.HasIndex("Tour_id");

                    b.ToTable("MultiAccommodations");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiRestaurantModel", b =>
                {
                    b.Property<string>("Restaurant_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tour_id")
                        .HasColumnType("int");

                    b.HasKey("Restaurant_id");

                    b.HasIndex("Tour_id");

                    b.ToTable("MultiRestaurants");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiTouristSpotModel", b =>
                {
                    b.Property<string>("TouristSpot_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tour_id")
                        .HasColumnType("int");

                    b.HasKey("TouristSpot_id");

                    b.HasIndex("Tour_id");

                    b.ToTable("MultiTouristSpots");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiTransportModel", b =>
                {
                    b.Property<string>("Transport_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Tour_id")
                        .HasColumnType("int");

                    b.HasKey("Transport_id");

                    b.HasIndex("Tour_id");

                    b.ToTable("MultiTransports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.RestaurantModel", b =>
                {
                    b.Property<string>("Restaurant_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Restaurant_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Restaurant_id");

                    b.HasIndex("Location_id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TouristSpotModel", b =>
                {
                    b.Property<string>("TouristSpot_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Activities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TouristSpot_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("TouristSpot_id");

                    b.HasIndex("Location_id");

                    b.ToTable("TouristSpots");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TourModel", b =>
                {
                    b.Property<int>("Tour_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tour_id"), 1L, 1);

                    b.Property<DateTime>("Depature_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Times")
                        .HasColumnType("int");

                    b.Property<string>("Tour_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Tour_id");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TransportModel", b =>
                {
                    b.Property<string>("Transport_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Start_position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Transport_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Transport_id");

                    b.HasIndex("Location_id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.UserModel", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Charge_card")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("member_lever")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.AccommodationModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.LocationModel", "Location")
                        .WithMany("Accommodations")
                        .HasForeignKey("Location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.BookingModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.AccommodationModel", "Accommodation")
                        .WithMany("Bookings")
                        .HasForeignKey("Accommodation_id");

                    b.HasOne("KarnelTravelAPI.Model.RestaurantModel", "Restaurant")
                        .WithMany("Bookings")
                        .HasForeignKey("Restaurant_id");

                    b.HasOne("KarnelTravelAPI.Model.TourModel", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("Tour_id");

                    b.HasOne("KarnelTravelAPI.Model.TouristSpotModel", "TouristSpot")
                        .WithMany("Bookings")
                        .HasForeignKey("TouristSpot_id");

                    b.HasOne("KarnelTravelAPI.Model.TransportModel", "Transport")
                        .WithMany("Bookings")
                        .HasForeignKey("Transport_id");

                    b.HasOne("KarnelTravelAPI.Model.UserModel", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accommodation");

                    b.Navigation("Restaurant");

                    b.Navigation("Tour");

                    b.Navigation("TouristSpot");

                    b.Navigation("Transport");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.FeedbackModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.BookingModel", "Booking")
                        .WithMany("Feedbacks")
                        .HasForeignKey("Feedback_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.AccommodationImageModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.AccommodationModel", "Accommodation")
                        .WithMany("AccommodationImages")
                        .HasForeignKey("Accommodation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accommodation");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.LocationImageModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.LocationModel", "Location")
                        .WithMany("LocationImages")
                        .HasForeignKey("Location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.RestaurantImageModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.RestaurantModel", "Restaurant")
                        .WithMany("RestaurantImages")
                        .HasForeignKey("Restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.ImageModel.TouristSpotImageModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.TouristSpotModel", "TouristSpot")
                        .WithMany("TouristSpotImages")
                        .HasForeignKey("TouristSpot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TouristSpot");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiAccommodationModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.AccommodationModel", "Accommodations")
                        .WithMany("MultiAccommodations")
                        .HasForeignKey("Accommodation_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KarnelTravelAPI.Model.TourModel", "Tours")
                        .WithMany("MultiAccommodations")
                        .HasForeignKey("Tour_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accommodations");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiRestaurantModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.RestaurantModel", "Restaurants")
                        .WithMany("MultiRestaurants")
                        .HasForeignKey("Restaurant_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KarnelTravelAPI.Model.TourModel", "Tours")
                        .WithMany("MultiRestaurants")
                        .HasForeignKey("Tour_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurants");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiTouristSpotModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.TourModel", "Tours")
                        .WithMany("MultiTouristSpots")
                        .HasForeignKey("Tour_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KarnelTravelAPI.Model.TouristSpotModel", "TouristSpots")
                        .WithMany("MultiTouristSpots")
                        .HasForeignKey("TouristSpot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TouristSpots");

                    b.Navigation("Tours");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.MultiServiceModel.MultiTransportModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.TourModel", "Tours")
                        .WithMany("MultiTransports")
                        .HasForeignKey("Tour_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KarnelTravelAPI.Model.TransportModel", "Transports")
                        .WithMany("MultiTransports")
                        .HasForeignKey("Transport_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tours");

                    b.Navigation("Transports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.RestaurantModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.LocationModel", "Location")
                        .WithMany("Restaurants")
                        .HasForeignKey("Location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TouristSpotModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.LocationModel", "Location")
                        .WithMany("TouristSpots")
                        .HasForeignKey("Location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TransportModel", b =>
                {
                    b.HasOne("KarnelTravelAPI.Model.LocationModel", "Location")
                        .WithMany("Transports")
                        .HasForeignKey("Location_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.AccommodationModel", b =>
                {
                    b.Navigation("AccommodationImages");

                    b.Navigation("Bookings");

                    b.Navigation("MultiAccommodations");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.BookingModel", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.LocationModel", b =>
                {
                    b.Navigation("Accommodations");

                    b.Navigation("LocationImages");

                    b.Navigation("Restaurants");

                    b.Navigation("TouristSpots");

                    b.Navigation("Transports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.RestaurantModel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MultiRestaurants");

                    b.Navigation("RestaurantImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TouristSpotModel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MultiTouristSpots");

                    b.Navigation("TouristSpotImages");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TourModel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MultiAccommodations");

                    b.Navigation("MultiRestaurants");

                    b.Navigation("MultiTouristSpots");

                    b.Navigation("MultiTransports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.TransportModel", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MultiTransports");
                });

            modelBuilder.Entity("KarnelTravelAPI.Model.UserModel", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
